/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC721A,
  ERC721AInterface,
} from "../../../../erc721a/contracts/ERC721A.sol/ERC721A";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d0838038062001d088339818101604052810190620000379190620002d9565b81600290805190602001906200004f9291906200008c565b508060039080519060200190620000689291906200008c565b50620000796200008760201b60201c565b6000819055505050620003c3565b600090565b8280546200009a906200038d565b90600052602060002090601f016020900481019282620000be57600085556200010a565b82601f10620000d957805160ff19168380011785556200010a565b828001600101855582156200010a579182015b8281111562000109578251825591602001919060010190620000ec565b5b5090506200011991906200011d565b5090565b5b80821115620001385760008160009055506001016200011e565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001a5826200015a565b810181811067ffffffffffffffff82111715620001c757620001c66200016b565b5b80604052505050565b6000620001dc6200013c565b9050620001ea82826200019a565b919050565b600067ffffffffffffffff8211156200020d576200020c6200016b565b5b62000218826200015a565b9050602081019050919050565b60005b838110156200024557808201518184015260208101905062000228565b8381111562000255576000848401525b50505050565b6000620002726200026c84620001ef565b620001d0565b90508281526020810184848401111562000291576200029062000155565b5b6200029e84828562000225565b509392505050565b600082601f830112620002be57620002bd62000150565b5b8151620002d08482602086016200025b565b91505092915050565b60008060408385031215620002f357620002f262000146565b5b600083015167ffffffffffffffff8111156200031457620003136200014b565b5b6200032285828601620002a6565b925050602083015167ffffffffffffffff8111156200034657620003456200014b565b5b6200035485828601620002a6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003a657607f821691505b60208210811415620003bd57620003bc6200035e565b5b50919050565b61193580620003d36000396000f3fe6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb465146102ab578063b88d4fde146102d4578063c87b56dd146102f0578063e985e9c51461032d576100dd565b80636352211e1461020657806370a082311461024357806395d89b4114610280576100dd565b8063095ea7b3116100bb578063095ea7b31461018757806318160ddd146101a357806323b872dd146101ce57806342842e0e146101ea576100dd565b806301ffc9a7146100e257806306fdde031461011f578063081812fc1461014a575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611204565b61036a565b604051610116919061124c565b60405180910390f35b34801561012b57600080fd5b506101346103fc565b6040516101419190611300565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c9190611358565b61048e565b60405161017e91906113c6565b60405180910390f35b6101a1600480360381019061019c919061140d565b61050d565b005b3480156101af57600080fd5b506101b8610651565b6040516101c5919061145c565b60405180910390f35b6101e860048036038101906101e39190611477565b610668565b005b61020460048036038101906101ff9190611477565b61098d565b005b34801561021257600080fd5b5061022d60048036038101906102289190611358565b6109ad565b60405161023a91906113c6565b60405180910390f35b34801561024f57600080fd5b5061026a600480360381019061026591906114ca565b6109bf565b604051610277919061145c565b60405180910390f35b34801561028c57600080fd5b50610295610a78565b6040516102a29190611300565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd9190611523565b610b0a565b005b6102ee60048036038101906102e99190611698565b610c15565b005b3480156102fc57600080fd5b5061031760048036038101906103129190611358565b610c88565b6040516103249190611300565b60405180910390f35b34801561033957600080fd5b50610354600480360381019061034f919061171b565b610d27565b604051610361919061124c565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461040b9061178a565b80601f01602080910402602001604051908101604052809291908181526020018280546104379061178a565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b600061049982610dbb565b6104cf576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610518826109ad565b90508073ffffffffffffffffffffffffffffffffffffffff16610539610e1a565b73ffffffffffffffffffffffffffffffffffffffff161461059c5761056581610560610e1a565b610d27565b61059b576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600061065b610e22565b6001546000540303905090565b600061067382610e27565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106da576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806106e684610ef5565b915091506106fc81876106f7610e1a565b610f1c565b610748576107118661070c610e1a565b610d27565b610747576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156107af576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107bc8686866001610f60565b80156107c757600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001019190508190555061089585610871888887610f66565b7c020000000000000000000000000000000000000000000000000000000017610f8e565b600460008681526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008416141561091d57600060018501905060006004600083815260200190815260200160002054141561091b57600054811461091a578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109858686866001610fb9565b505050505050565b6109a883838360405180602001604052806000815250610c15565b505050565b60006109b882610e27565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a27576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610a879061178a565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab39061178a565b8015610b005780601f10610ad557610100808354040283529160200191610b00565b820191906000526020600020905b815481529060010190602001808311610ae357829003601f168201915b5050505050905090565b8060076000610b17610e1a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610bc4610e1a565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c09919061124c565b60405180910390a35050565b610c20848484610668565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610c8257610c4b84848484610fbf565b610c81576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610c9382610dbb565b610cc9576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610cd361111f565b9050600081511415610cf45760405180602001604052806000815250610d1f565b80610cfe84611136565b604051602001610d0f9291906117f8565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610dc6610e22565b11158015610dd5575060005482105b8015610e13575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610e36610e22565b11610ebe57600054811015610ebd5760006004600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415610ebb575b6000811415610eb1576004600083600190039350838152602001908152602001600020549050610e86565b8092505050610ef0565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610f7d86868461118f565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fe5610e1a565b8786866040518563ffffffff1660e01b81526004016110079493929190611871565b602060405180830381600087803b15801561102157600080fd5b505af192505050801561105257506040513d601f19601f8201168201806040525081019061104f91906118d2565b60015b6110cc573d8060008114611082576040519150601f19603f3d011682016040523d82523d6000602084013e611087565b606091505b506000815114156110c4576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561117a57600184039350600a81066030018453600a81049050806111755761117a565b61114f565b50828103602084039350808452505050919050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6111e1816111ac565b81146111ec57600080fd5b50565b6000813590506111fe816111d8565b92915050565b60006020828403121561121a576112196111a2565b5b6000611228848285016111ef565b91505092915050565b60008115159050919050565b61124681611231565b82525050565b6000602082019050611261600083018461123d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112a1578082015181840152602081019050611286565b838111156112b0576000848401525b50505050565b6000601f19601f8301169050919050565b60006112d282611267565b6112dc8185611272565b93506112ec818560208601611283565b6112f5816112b6565b840191505092915050565b6000602082019050818103600083015261131a81846112c7565b905092915050565b6000819050919050565b61133581611322565b811461134057600080fd5b50565b6000813590506113528161132c565b92915050565b60006020828403121561136e5761136d6111a2565b5b600061137c84828501611343565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113b082611385565b9050919050565b6113c0816113a5565b82525050565b60006020820190506113db60008301846113b7565b92915050565b6113ea816113a5565b81146113f557600080fd5b50565b600081359050611407816113e1565b92915050565b60008060408385031215611424576114236111a2565b5b6000611432858286016113f8565b925050602061144385828601611343565b9150509250929050565b61145681611322565b82525050565b6000602082019050611471600083018461144d565b92915050565b6000806000606084860312156114905761148f6111a2565b5b600061149e868287016113f8565b93505060206114af868287016113f8565b92505060406114c086828701611343565b9150509250925092565b6000602082840312156114e0576114df6111a2565b5b60006114ee848285016113f8565b91505092915050565b61150081611231565b811461150b57600080fd5b50565b60008135905061151d816114f7565b92915050565b6000806040838503121561153a576115396111a2565b5b6000611548858286016113f8565b92505060206115598582860161150e565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115a5826112b6565b810181811067ffffffffffffffff821117156115c4576115c361156d565b5b80604052505050565b60006115d7611198565b90506115e3828261159c565b919050565b600067ffffffffffffffff8211156116035761160261156d565b5b61160c826112b6565b9050602081019050919050565b82818337600083830152505050565b600061163b611636846115e8565b6115cd565b90508281526020810184848401111561165757611656611568565b5b611662848285611619565b509392505050565b600082601f83011261167f5761167e611563565b5b813561168f848260208601611628565b91505092915050565b600080600080608085870312156116b2576116b16111a2565b5b60006116c0878288016113f8565b94505060206116d1878288016113f8565b93505060406116e287828801611343565b925050606085013567ffffffffffffffff811115611703576117026111a7565b5b61170f8782880161166a565b91505092959194509250565b60008060408385031215611732576117316111a2565b5b6000611740858286016113f8565b9250506020611751858286016113f8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806117a257607f821691505b602082108114156117b6576117b561175b565b5b50919050565b600081905092915050565b60006117d282611267565b6117dc81856117bc565b93506117ec818560208601611283565b80840191505092915050565b600061180482856117c7565b915061181082846117c7565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b60006118438261181c565b61184d8185611827565b935061185d818560208601611283565b611866816112b6565b840191505092915050565b600060808201905061188660008301876113b7565b61189360208301866113b7565b6118a0604083018561144d565b81810360608301526118b28184611838565b905095945050505050565b6000815190506118cc816111d8565b92915050565b6000602082840312156118e8576118e76111a2565b5b60006118f6848285016118bd565b9150509291505056fea26469706673582212206b544e5056dbd63acca6d7291ef4c81426140b8040113c973c8a1dfadb105dae64736f6c63430008090033";

type ERC721AConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721A__factory extends ContractFactory {
  constructor(...args: ERC721AConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721A> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721A>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721A {
    return super.attach(address) as ERC721A;
  }
  override connect(signer: Signer): ERC721A__factory {
    return super.connect(signer) as ERC721A__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AInterface {
    return new utils.Interface(_abi) as ERC721AInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721A {
    return new Contract(address, _abi, signerOrProvider) as ERC721A;
  }
}
