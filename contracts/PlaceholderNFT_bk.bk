// SPDX-License-Identifier: MIT
pragma solidity ^0.8.1;

import "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol";
import "@openzeppelin/contracts/utils/Counters.sol";

contract PlaceholderNFT is ERC721URIStorage {
    using Counters for Counters.Counter;
    Counters.Counter private _tokenIds;

    // We need to pass the name of our NFTs token and its symbol.
    constructor(string memory name, string memory symbol)
        ERC721(name, symbol)
    {}

    // A function our user will hit to get their NFT.
    function mint(uint256 count) public {
        for (uint256 i; i < count; i++) {
            // Get the current tokenId, this starts at 0.
            uint256 newItemId = _tokenIds.current();

            // Actually mint the NFT to the sender using msg.sender.
            _safeMint(msg.sender, newItemId);

            // Set the NFTs data.
            _setTokenURI(newItemId, "https://jsonkeeper.com/b/RUUS");

            // Increment the counter for when the next NFT is minted.
            _tokenIds.increment();
        }
    }
}
